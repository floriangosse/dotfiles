#!/usr/bin/env bash

if [[ $1 == "--nv" ]]; then
    git push --no-verify
else
    git push
fi

if ! command -v gh > /dev/null; then
    echo >&2 "Command 'gh' not available. Skip creating pull request."
    exit
fi

base_branch_priority=(
    develop
    main
    master
)

base_branch=""
for possible_base_branch in ${base_branch_priority[@]}; do
    base_branch=$(git branch --format "%(refname:short)" | grep --fixed-strings --line-regexp "${possible_base_branch}");
    if ! [[ -z "${base_branch}" ]]; then
        break;
    fi
done

if [[ -z "${base_branch}" ]]; then
    supported_base_branch_list=$(printf ", %s" "${base_branch_priority[@]}")
    supported_base_branch_list=${supported_base_branch_list:2}
    echo >&2 "No matching base branch found. Supporting base branches: ${supported_base_branch_list}"
    exit;
fi

branch=$(git branch --show-current | awk '{ print tolower($0) }')
if [[ $branch =~ [a-z]{1,}-[0-9]{1,} ]]; then
    ticket=$(echo "$branch" | sed -E -e 's/([a-z]{1,}-[0-9]{1,})_.*/\1/g' | awk '{ print toupper($0) }')
    title=$(echo "$branch" | sed -E -e 's/[a-z]{1,}-[0-9]{1,}_(.*)/\1/g' -e 's/-/ /g')
    capitalized_title="$(echo ${title:0:1} | tr '[a-z]' '[A-Z]')${title:1}"

    open_patches=$(gh pr list --head "$branch" --json "number" --jq "length")
    if [[ "$open_patches" -eq "0" ]]; then
        gh pr create --assignee @me --title "[$ticket] ${capitalized_title}" --body "resolves $ticket" --draft --base "${base_branch}"
    fi
fi
