# tmux Configuration

# ===============
# Options
# ===============

# Set default terminal
set -g default-terminal "screen-256color"

# Disable automatically set of window title
set -g allow-rename off
set -g set-titles on

# Highlight activity in other tabs or windows
setw -g monitor-activity on
set -g visual-activity on

# Mouse control
setw -g mouse on
# Use Vi mode
setw -g mode-keys vi

# Set esc delay
set -s escape-time 0

# Disable remain-on-exit
setw -g remain-on-exit off

# Gnome-terminal doesn't support setting the clipboard using xterm escape sequences so we should ensure the set-clipboard option is off
set -s set-clipboard off


# ===============
# Keybindings
# ===============

# By default all bindings will be bound to the default key table which means that the
# prefix key (later `C-a`) has to be pressed before the bound binding. (e.g. `C-a` `C-x`)
#
# `bind -n` means that the binding will be bound in the key table `root`. All bindings
# which are bound to the key table `root` can be triggered without the prefix key.


# Set wait time after command to 0 so not following command is possible
set -g repeat-time 0


# Change command binding to Ctrl+a
unbind C-b
set -g prefix C-a

# Enable xterm keys
set-window-option -g xterm-keys on

# Reload tmux config
unbind r
bind r source-file ~/.tmux.conf

# Create new window
unbind c
bind c new-window -c "#{pane_current_path}"

# Change pane splitting
# horizontal Ctrl+x
unbind %
bind C-x split-window -c "#{pane_current_path}" -h
# vertical Ctrl+y
unbind '"'
bind C-y split-window -c "#{pane_current_path}" -v

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
# Disabled: to enforce vim keyS
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Copy mode
unbind [
bind Escape copy-mode

bind -T copy-mode-vi v send -X begin-selection;

if-shell -b 'test $(uname) = "Linux"' 'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -in -selection clipboard";'
if-shell -b 'test $(uname) = "Darwin"' 'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy";'

unbind -T copy-mode-vi MouseDragEnd1Pane;


# ===============
# UI
# ===============

set -g status-bg colour239
set -g status-fg colour251
set -g status-interval 1
set -g status-left ' '
set -g status-right '%Y-%m-%d %H:%M:%S'

# Highlight current window in statusbar
set -g window-status-format ' [#I] #W '
set -g window-status-current-format ' [#I] #W '
set -g window-status-current-bg colour254
set -g window-status-current-fg colour239

